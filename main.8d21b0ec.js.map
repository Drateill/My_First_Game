{"version":3,"sources":["src/CST.ts","src/SCENES/LoadScene.ts","src/SCENES/MenuScene.ts","src/CharacterSprite.ts","src/SCENES/PlayScene.ts","src/main.ts"],"names":[],"mappings":"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","file":"main.8d21b0ec.js","sourceRoot":"..","sourcesContent":["export const CST = {\r\n    SCENES: {\r\n        LOAD: \"LOAD\",\r\n        MENU : \"MENU\",\r\n        PLAY : \"PLAY\"\r\n    },\r\n    IMAGE : {\r\n        LOGO : \"logo.png\",\r\n        OPTIONS: \"options_button.png\",\r\n        PLAY : \"play_button.png\",\r\n        TITLE : \"title_bg.jpg\"\r\n    },\r\n    AUDIO:{\r\n        TITLE : \"shuinvy-childhood.pm3\"\r\n    },\r\n    SPRITE:{\r\n        CAT : \"cat.png\"\r\n    }\r\n}","import {\r\n    CST\r\n} from '../CST';\r\nexport class LoadScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.LOAD\r\n        })\r\n    }\r\n\r\n    init() {\r\n\r\n    }\r\n\r\n    loadImages(){\r\n        this.load.setPath(\"./assets/image\");\r\n        for (let prop in CST.IMAGE){\r\n            //@ts-ignore\r\n            this.load.image(CST.IMAGE[prop], CST.IMAGE[prop]);\r\n        }\r\n    }\r\n    loadAudio(){\r\n        this.load.setPath(\"./assets/audio\");\r\n        for (let prop in CST.AUDIO){\r\n            //@ts-ignore\r\n            this.load.audio(CST.AUDIO[prop], CST.AUDIO[prop]);\r\n        }\r\n    }\r\n    loadSprites(frameConfig? :Phaser.Types.Loader.FileTypes.ImageFrameConfig){\r\n        this.load.setPath(\"./assets/sprite\");\r\n        for (let prop in CST.SPRITE){\r\n            //@ts-ignore\r\n            this.load.spritesheet(CST.SPRITE[prop], CST.SPRITE[prop], frameConfig);\r\n        }\r\n    }\r\n\r\n\r\n    preload() {\r\n        this.load.spritesheet(\"anna\", \"./assets/sprite/anna.png\",{frameWidth:64, frameHeight:64});\r\n\r\n        this.load.atlas(\"characters\", \"./assets/sprite/characters.png\", \"./assets/sprite/characters.json\");\r\n        this.load.atlas(\"daze\", \"./assets/sprite/daze.png\", \"./assets/sprite/daze.json\");\r\n        this.load.spritesheet(\"rapier\", \"./assets/sprite/WEAPON_rapier.png\", { frameHeight: 192, frameWidth: 192});\r\n\r\n\r\n\r\n        this.loadAudio();\r\n        this.loadImages();\r\n        this.loadSprites({\r\n            frameWidth:32,\r\n            frameHeight:32\r\n        });\r\n\r\n        let loadingBar = this.add.graphics({\r\n            fillStyle: {\r\n                color: 0xffffff\r\n            }\r\n        })\r\n        \r\n\r\n       /* for(let i = 0; i<100; i++){\r\n            this.load.spritesheet(\"cat\"+i, \"../dist/assets/sprite/cat.png\", {\r\n                frameWidth: 32,\r\n                frameHeight: 32\r\n            });\r\n\r\n        }*/\r\n        this.load.on(\"progress\", (percent : number) => {\r\n            loadingBar.fillRect(0, this.game.renderer.height/2, this.game.renderer.width * percent, 50);\r\n            console.log(percent);\r\n        })\r\n    }\r\n    create() {\r\n        this.scene.start(CST.SCENES.MENU);\r\n    }\r\n\r\n}","import { CST } from '../CST';\r\nexport class MenuScene extends Phaser.Scene {\r\n    constructor() {\r\n        super({\r\n            key: CST.SCENES.MENU\r\n        })\r\n    }\r\n    init(){\r\n    }\r\n    create() {\r\n        this.add.image(this.game.renderer.width/2,this.game.renderer.height*0.20, CST.IMAGE.LOGO).setDepth(1);\r\n        let playButton = this.add.image(this.game.renderer.width/2,this.game.renderer.height*0.50, CST.IMAGE.PLAY).setDepth(1);\r\n        let optionButton = this.add.image(this.game.renderer.width/2,this.game.renderer.height*0.50+100, CST.IMAGE.OPTIONS).setDepth(1);\r\n        this.add.image(0,0, CST.IMAGE.TITLE).setOrigin(0).setDepth(0);\r\n        let hoverSprite = this.add.sprite(100,100,CST.SPRITE.CAT);\r\n        hoverSprite.setScale(2);\r\n        hoverSprite.setVisible(false);\r\n\r\n\r\n        this.anims.create({\r\n            key:\"walk\",\r\n            frameRate:4,\r\n            repeat:-1,\r\n            frames:this.anims.generateFrameNumbers(CST.SPRITE.CAT,{\r\n                frames:[0,1,2,3]\r\n            })\r\n        })\r\n        playButton.setInteractive();\r\n\r\n        playButton.on(\"pointerover\",()=>{\r\n            hoverSprite.setVisible(true);\r\n            hoverSprite.play(\"walk\");\r\n            hoverSprite.x= playButton.x - playButton.width;\r\n            hoverSprite.y = playButton.y;\r\n        })\r\n        playButton.on(\"pointerout\",()=>{\r\n            hoverSprite.setVisible(false);\r\n        })\r\n        playButton.on(\"pointerup\",()=>{\r\n          this.scene.start(CST.SCENES.PLAY);\r\n        })\r\n\r\n\r\n        optionButton.setInteractive();\r\n\r\n        optionButton.on(\"pointerover\",()=>{\r\n            hoverSprite.setVisible(true);\r\n            hoverSprite.play(\"walk\");\r\n            hoverSprite.x= optionButton.x - optionButton.width;\r\n            hoverSprite.y = optionButton.y;\r\n        })\r\n        optionButton.on(\"pointerout\",()=>{\r\n            hoverSprite.setVisible(false);\r\n        })\r\n        optionButton.on(\"pointerup\",()=>{\r\n           //this.scene.launch()\r\n        })\r\n    }\r\n}","export class CharacterSprite extends Phaser.Physics.Arcade.Sprite{\r\n    hp: number;\r\n    constructor(scene: Phaser.Scene, x:number, y:number, texture:string, frame:string|number){\r\n        super(scene,x,y,texture,frame);\r\n        scene.sys.updateList.add(this);\r\n        scene.sys.displayList.add(this);\r\n        this.setScale(2);\r\n        this.setOrigin(0,0);\r\n        scene.physics.world.enableBody(this);\r\n        this.setImmovable(true);\r\n\r\n        this.hp = 10;\r\n    }\r\n}","import { CST } from \"../CST\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { CharacterSprite } from \"../CharacterSprite\";\r\n//import {Sprite } from \"../Sprite\";\r\nexport class PlayScene extends Phaser.Scene {\r\n    keyboard!: { [index: string]: Phaser.Input.Keyboard.Key };\r\n    anna!: Phaser.Physics.Arcade.Sprite;\r\n    hooded!: Phaser.Physics.Arcade.Sprite;\r\n    assassins!: Phaser.Physics.Arcade.Group;\r\n    fireAttacks!: Phaser.Physics.Arcade.Group;\r\n    player: Phaser.GameObjects.Container;\r\n\r\n    constructor() {\r\n\r\n        super({\r\n            key: CST.SCENES.PLAY,\r\n\r\n        })\r\n    }\r\n\r\n\r\n    preload() {\r\n        this.textures.addSpriteSheetFromAtlas(\"mandy\",{frameWidth:64,frameHeight:64,atlas:\"characters\", frame:\"mandy\"});\r\n        \r\n        \r\n        this.anims.create({\r\n            key: \"mandyswordleft\",\r\n            frameRate: 24,\r\n            frames: this.anims.generateFrameNumbers(\"mandy\", {\r\n                start: 169,\r\n                end: 174\r\n            })\r\n        });\r\n        this.anims.create({\r\n            key: \"sword_left\",\r\n            frameRate: 24,\r\n            frames: this.anims.generateFrameNumbers(\"rapier\", {\r\n                start: 6,\r\n                end: 11\r\n            }),\r\n            showOnStart: true,\r\n            hideOnComplete: true\r\n        });\r\n\r\n        this.anims.create({\r\n            key: \"blaze\",\r\n            duration: 50,\r\n            frames: this.anims.generateFrameNames(\"daze\", {\r\n                prefix: \"fire0\",\r\n                suffix: \".png\",\r\n                end: 55,\r\n            }),\r\n            showOnStart: true,\r\n            hideOnComplete: true\r\n        })\r\n\r\n\r\n        this.anims.create({\r\n            key: \"left\",\r\n            frameRate: 24,\r\n            frames: this.anims.generateFrameNumbers(\"anna\", {\r\n                start: 9,\r\n                end: 17\r\n            })\r\n        });\r\n        this.anims.create({\r\n            key: \"right\",\r\n            frameRate: 24,\r\n            frames: this.anims.generateFrameNumbers(\"anna\", {\r\n                start: 27,\r\n                end: 35\r\n            })\r\n        });\r\n        this.anims.create({\r\n            key: \"up\",\r\n            frameRate: 24,\r\n            frames: this.anims.generateFrameNumbers(\"anna\", {\r\n                start: 0,\r\n                end: 8\r\n            })\r\n        });\r\n\r\n        this.anims.create({\r\n            key: \"down\",\r\n            frameRate: 24,\r\n            frames: this.anims.generateFrameNumbers(\"anna\", {\r\n                start: 18,\r\n                end: 26\r\n            })\r\n        });\r\n        this.textures.addSpriteSheetFromAtlas(\"hooded\", { frameHeight: 64, frameWidth: 64, atlas: \"characters\", frame: \"hooded\" });\r\n        this.load.image(\"terrain\", \"./assets/image/terrain_atlas.png\");\r\n        this.load.image(\"items\", \"./assets/image/items.png\");\r\n\r\n        this.load.tilemapTiledJSON(\"mappy\", \"./assets/maps/mappy.json\");\r\n\r\n    }\r\n\r\n    create() {\r\n        this.player = this.add.container(200,200, [this.add.sprite(0,0,\"mandy\",26), this.add.sprite(0,0,\"rapier\").setVisible(false)]).setDepth(2).setScale(2);\r\n        window.player = this.player;\r\n        this.anna = new CharacterSprite(this,400,400, \"anna\",26);\r\n        this.hooded = new CharacterSprite(this,200,200, \"hooded\",26);\r\n\r\n\r\n        this.input.keyboard.on(\"keydown_F\", ()=>{\r\n            (this.player.list[0] as Phaser.GameObjects.Sprite).play(\"mandyswordleft\");\r\n            this.player.list[1].play(\"sword_left\");\r\n        })\r\n\r\n        this.fireAttacks = this.physics.add.group();\r\n        this.assassins = this.physics.add.group({immovable:true});\r\n        this.assassins.add(this.hooded)\r\n        /**@ts-ignore */\r\n        window.hooded = this.hooded;\r\n        /**@ts-ignore */\r\n        window.anna = this.anna;\r\n\r\n        this.anna.setSize(40,50).setOffset(12);\r\n        this.anna.setCollideWorldBounds(true);\r\n/**@ts-ignore */\r\n        this.keyboard = this.input.keyboard.addKeys(\"Z,Q,S,D\");\r\n        this.input.on(\"pointermove\", (pointer: Phaser.Input.Pointer) => {\r\n            if (pointer.isDown) {\r\n                let fire = this.add.sprite(pointer.worldX, pointer.worldY, \"daze\", \"fire00.png\").play(\"blaze\")\r\n                this.fireAttacks.add(fire);\r\n                fire.on(\"animationcomplete\", () => {\r\n                    fire.destroy();\r\n                })\r\n            }\r\n        });\r\n/**@ts-ignore */\r\n        this.physics.world.addCollider(this.anna, this.assassins, (anna: CharacterSprite, hooded: Phaser.Physics.Arcade.Sprite) => {\r\n                anna.hp--;\r\n                console.log(anna.hp)\r\n                if (anna.hp ===0){\r\n                    anna.destroy();\r\n                }\r\n                hooded.destroy();\r\n                // for (let i = 0; i<2; i ++){\r\n                //     let x = 0;\r\n                //     let y = 0;\r\n    \r\n                //     switch(Phaser.Math.Between(0,1)){\r\n                //         case 0 : x = Phaser.Math.Between(0,this.game.renderer.width);\r\n                //         break\r\n                //         case 1 : y = Phaser.Math.Between(0,this.game.renderer.height);\r\n    \r\n                //     }\r\n                //     this.assassins.add(this.physics.add.sprite(x, y, \"hooded\", 26).setScale(2).setImmovable(true));\r\n                // }\r\n        });\r\n        /**@ts-ignore */\r\n        this.physics.world.addCollider(this.fireAttacks, this.assassins, (fireAttacks: Phaser.Physics.Arcade.Sprite, hooded: Phaser.Physics.Arcade.Sprite) => {\r\n            fireAttacks.destroy();\r\n            hooded.destroy();\r\n            // for (let i = 0; i<2; i ++){\r\n            //     let x = 0;\r\n            //     let y = 0;\r\n\r\n            //     switch(Phaser.Math.Between(0,1)){\r\n            //         case 0 : x = Phaser.Math.Between(0,this.game.renderer.width);\r\n            //         break\r\n            //         case 1 : y = Phaser.Math.Between(0,this.game.renderer.height);\r\n\r\n            //     }\r\n            //     this.assassins.add(this.physics.add.sprite(x, y, \"hooded\", 26).setScale(2).setImmovable(true));\r\n            // }\r\n    });\r\n let mappy = this.add.tilemap(\"mappy\");\r\n let terrain = mappy.addTilesetImage(\"terrain_atlas\",\"terrain\");\r\n let itemset = mappy.addTilesetImage(\"items\");\r\n\r\n let botlayer = mappy.createStaticLayer(\"bot\", [terrain], 0,0).setDepth(-1);\r\n let toplayer = mappy.createStaticLayer(\"top\", [terrain], 0,0);\r\nthis.physics.add.collider(this.anna, toplayer);\r\n toplayer.setCollisionByProperty({collides:true});\r\n\r\n toplayer.setCollision([269,270,271,301,302,303,333,334,335]);\r\n\r\n toplayer.setTileLocationCallback(10,8,1,1,()=>{\r\n     alert(\"The swords calls to you\");\r\n     //@ts-ignore\r\n     toplayer.setTileLocationCallback(10,8,1,1,null);\r\n })\r\n\r\n toplayer.setTileIndexCallback([272,273,274,304,305,306,336,337,338],()=>{\r\n     console.log(\"it burns !\");\r\n })\r\n\r\n\r\n let items = mappy.createFromObjects(\"pickup\",1114, {key:CST.SPRITE.CAT}).map((Sprite:Phaser.GameObjects.Sprite)=>{\r\n     Sprite.setScale(2);\r\n     Sprite.setInteractive();\r\n })\r\n\r\n this.input.on(\"gameobjectdown\", (pointer:Phaser.Input.Pointer, obj:Phaser.GameObjects.Sprite)=>{\r\n     obj.destroy();\r\n })\r\n this.input.on(\"pointerdown\", (pointer:Phaser.Input.Pointer)=>{\r\n    let tile = mappy.getTileAt(mappy.worldToTileX(pointer.x),mappy.worldToTileX(pointer.y));\r\n    if(tile){\r\n        console.log(tile);\r\n    }\r\n });\r\n\r\n this.cameras.main.startFollow(this.anna);\r\n this.physics.world.setBounds(0,0, mappy.widthInPixels, mappy.heightInPixels)\r\n\r\n\r\n    }\r\n\r\n    \r\n\r\n    update(time: number, delta: number) {\r\n\r\n        for(let i = 0; i< this.assassins.getChildren().length; i++){\r\n            this.physics.accelerateToObject(this.assassins.getChildren()[i],this.anna);\r\n        }\r\n\r\n        if (this.anna.active === true) {\r\n            if (this.keyboard.D.isDown === true) {\r\n                this.anna.setVelocityX(128);\r\n            }\r\n\r\n            if (this.keyboard.Q.isDown === true) {\r\n                this.anna.setVelocityX(-128);\r\n            }\r\n\r\n            if (this.keyboard.S.isDown === true) {\r\n                this.anna.setVelocityY(128);\r\n            }\r\n\r\n            if (this.keyboard.Z.isDown === true) {\r\n                this.anna.setVelocityY(-128);\r\n            }\r\n\r\n            if (this.keyboard.Q.isUp && this.keyboard.D.isUp) {\r\n                this.anna.setVelocityX(0);\r\n            }\r\n            if (this.keyboard.Z.isUp && this.keyboard.S.isUp) {\r\n                this.anna.setVelocityY(0);\r\n            }\r\n            if(this.anna.body.velocity.x>0){\r\n                this.anna.play(\"right\",true);\r\n\r\n            }\r\n            else if(this.anna.body.velocity.x<0){\r\n                this.anna.play(\"left\",true);\r\n\r\n\r\n            }\r\n            else if(this.anna.body.velocity.y>0){\r\n                this.anna.play(\"down\",true);\r\n\r\n\r\n            }\r\n            else if(this.anna.body.velocity.y<0){\r\n                this.anna.play(\"up\",true);\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n}","\r\nimport{LoadScene} from './SCENES/LoadScene';\r\nimport{MenuScene} from './SCENES/MenuScene';\r\nimport { PlayScene } from './SCENES/PlayScene';\r\nimport { Physics } from 'phaser';\r\nlet game = new Phaser.Game({\r\n    width:800,\r\n    height:600,\r\n    scene: [\r\n        LoadScene,MenuScene, PlayScene\r\n\r\n    ],\r\n    render: {\r\n        pixelArt:true\r\n    },\r\n    physics: {\r\n        default: \"arcade\",\r\n        arcade:{\r\n            debug:true\r\n        }\r\n    },\r\n    scale:{\r\n        mode: Phaser.Scale.FIT,\r\n        autoCenter:Phaser.Scale.CENTER_BOTH\r\n    }\r\n\r\n\r\n});\r\n"]}